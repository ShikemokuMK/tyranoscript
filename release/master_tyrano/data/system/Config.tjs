// Config.tjs - ティラノスクリプト 設定
// Copyright (C) 2012-2015 ShikemokuMK  

;global.config_version = "3.14"; // この行を消さないでください

// ティラノスクリプトの基本設定になります。
// 吉里吉里で動かす場合は同一フォルダ内のKirikiri_Config.tjs を使用して下さい

// このファイル内で設定できる項目は、すべて
// ;設定名 = 値;
// の形式になっています。
// 「追加の設定」を除いて、設定は各項目につき１行で記述する必要があります。


//------------------------------------------------------- 全体の設定 -----


// ◆ タイトル
// ウィンドウのキャプション(タイトル)および
// ブラウザの場合は、タイトルに指定されます
;System.title = "ティラノスクリプト";


// ◆ プロジェクト一意の識別名称　ティラノスクリプト独自設定
// プロジェクト固有の文字列を指定してください。特に同一ドメイン上にプロジェクトを配置する場合は必ず指定してください
;projectID = tyranoproject;

// 画面比率を固定にするか否か
// "fit"を指定すると、プレイヤーが閲覧している端末に合わせて自動的に調整されますが、縦横比率は保たれません。
// "fix"を指定すると縦横比率は保たれます。ただし、端末によっては何も表示されない空白領域ができてしまいます。
// "default"を指定すると縦横比の調整は一切行われません
;ScreenRatio = fix;

//-------------------------------------------- ウィンドウや動作の設定 -----

function KAGWindow_config()
{
// ◆ 画面サイズ
// scWidth に画面の幅、scHeight に画面の高さをピクセル単位で指定します。

;scWidth = 640;
;scHeight = 480;


// ◆ 文字表示スピード (ミリ秒/文字)（未実装）
;chSpeeds.fast = 10; // 「高速」文字表示スピード
;chSpeeds.normal = 30; // 「普通」文字表示スピード
;chSpeeds.slow = 50; // 「遅い」文字表示スピード

// ◆ スキップスピード (ミリ秒/文字)
//スキップ時にどれくらいの早さで進むかを設定できる
;skipSpeed = 30;

// ◆ 自動的に読み進むウェイト ページ末ウェイトの設定値 (ミリ秒)（未実装）
;autoModePageWaits.fast = 400; // 「短い」
;autoModePageWaits.faster = 700; // 「やや短い」
;autoModePageWaits.medium = 1000; // 「普通」
;autoModePageWaits.slower = 1300; // 「やや遅い」
;autoModePageWaits.slow = 2000; // 「遅い」


// ◆ 自動的に読み進むウェイト [l] ウェイトの設定値 (ミリ秒)（未実装）
;autoModeLineWaits.fast = 180; // 「短い」
;autoModeLineWaits.faster = 240; // 「やや短い」
;autoModeLineWaits.medium = 300; // 「普通」
;autoModeLineWaits.slower = 360; // 「やや遅い」
;autoModeLineWaits.slow = 500; // 「遅い」


// ◆ マウスカーソル
// マウスカーソルを指定します。画像ファイルも指定することができます
// defaultを指定すると、通常の矢印になります。
// 独自の画像カーソルを使用したい場合はimageフォルダに配置した上で、ファイル名を指定してください
// [cursor]タグを使って、ゲーム中に変更することもできます。

;cursorDefault = default; // 通常のマウスカーソル 


// ◆ コンフィグ（メニュー）機能表示
// セーブ・ロードやタイトルに戻るといった一連の機能を表示するかを指定します
;configVisible = true;  //コンフィグアイコンを表示
;configLeft    = -1     //コンフィグアイコンの左位置を指定できます。-1の場合は画面右下
;configTop     = -1     //コンフィグアイコンの上位置を指定できます。-1の場合は画面右下

// セーブ・ロード時にサムネを表示したくない場合はこちらをfalseに設定してください
// 一部古い機種でセーブ機能が動作しない場合などにサムネを表示しないことで解決しないことがあります。
;saveThumb          = true;
;saveThumbWidth     = 64;
;saveThumbHeight    = 48;

// ◆ バックログ機能
// バックログ機能用にテキストの最大保持数を保存できます。
// 保存されたデータはtf.system.backlog に配列として格納されます。
// 0の場合、保存を行いません。
;maxBackLogNum = 10;

// ◆ ラベル記録
// 自動的に「読んだ」ラベルを記録するかどうかを指定します。
// この設定が false でなく true になっていると、ラベルを読むごとにシステム
// 変数 (sf) に
// trail_シナリオファイル名_ラベル名
// という変数名の変数に 1 が加算されます。
// たとえば first.ks の *start というラベルであれば trail_first_start とい
// う変数名になります。まだ通過していないカ所では 未定義 ( 0 として見なされ
// ます ) になっています。
// 「読む」というのは、ラベルから、そのラベルの終了までをすべてシナリオが実
// 行されたときになって初めて「読んだ」とみなされます。
// 「ラベルの終了」とは、以下の場合に終了とされ、そのラベルは「読んだ」とさ
// れます。
//
// ・[s] タグやシナリオの終端に達した
// ・次のラベルが現れた
// ・jump タグでジャンプした
// ・link や button でのリンク先へのジャンプ
//    ( 文章を表示しきっていない場合でも リンク先へジャンプすると「読んだ」
//      と見なされるので注意; link や button タグの countpage 属性を参照 )
// ・return タグで戻るとき ( call で飛ぶときは終了とは見なされません )
;autoRecordPageShowing = false;


// ◆ 通過記録
// 通過記録を自動的に行うかどうかを指定します。
// ラベル記録とは違います。
// 通過記録を行うと、「システム - 前に戻る」で、直前に
// 通過記録を行った箇所に戻ることができます。
// 0 を指定すると自動的には通過記録を行いません ( record タグで手動で通過記
//   録を行うことはできます )
// 1 を指定すると 保存可能なラベルを通過するごとに自動的に通過記録を行いま
//   す。
// 2 を指定すると選択肢 ( s タグで停止 ) ごとに通過記録を行います。
;recordHistoryOfStore = 0;


// ◆ 初期状態の前景レイヤの数
// 必要なければ 0 を指定してかまいません。
// 数が多いと速度が低下したりメモリを消費しますので、必要以上に大きな数を指
// 定しない方が良いでしょう。
// laycount タグでシナリオ内でも変更できます。
;numCharacterLayers = 10;


// ◆ 前景レイヤの左右中心位置指定
// +---------+
// |         |
// | |  |  | |
// | |  |  | |
// +---------+
// image タグあるいは img タグの pos 属性で指定する前景レイヤの 位置名 (
// left や lecft_center など ) とそれぞれに対応する 中心位置 ( x 座標 ) を
// 指定します。;scPositionX.位置名 = 中心位置; の形式で指定します。
;scPositionX.left = 160;
;scPositionX.left_center = 240;
;scPositionX.center = 320;
;scPositionX.right_center = 400;
;scPositionX.right = 480;


// 簡易な記号
// ( pos 属性に指定する left, left_center, center, right_center, right を
//  それぞれ l, lc, c, rc, r でも指定できるように別名を定義します )
;scPositionX.l = scPositionX.left;
;scPositionX.lc = scPositionX.left_center;
;scPositionX.c = scPositionX.center;
;scPositionX.rc = scPositionX.right_center;
;scPositionX.r = scPositionX.right;


// ◆ 初期状態のメッセージレイヤの数
// 前景レイヤと違って、0 を指定することはできません。これも必要な数だけ確保
// するようにすべきです。laycount タグでシナリオ内でも変更できます。
;numMessageLayers = 2;


// ◆ 初期状態でメッセージレイヤを表示するかどうか
// true を指定するとメッセージレイヤ0が初期状態で表示状態になりますが、
// false を指定すると初期状態ではすべてのメッセージレイヤは初期状態で非表示
// になります。
;initialMessageLayerVisible = true;


// ◆ 利用可能な栞の数
// メニューに表示し、ユーザーが選択可能な栞の数です。
// save や load タグで保存可能な栞の数はこの設定には影響しません。
// メニューによる栞の管理を行わない場合 ( ゲーム画面中で全部栞の管理などを
// 行う場合など ) は、numBookMarks は必要な数に設定し、restoreMenu.visible と
// storeMenu.visible を false に設定してください。
;numBookMarks = 10;


// ◆ 「デバッグ」
// ここをtrueにしておくことでブラウザのコンソールログに各種値が出力されるようになります
//　ゲームリリース時は必ずfalseにしておきましょう

;debugMenu.visible = true;


//-------------------------------------------- メッセージレイヤの設定 -----


function MessageLayer_config()
{
// ◆ メッセージレイヤの表示モード
// メッセージレイヤをどのモードで表示するかを指定します。
// ltAddAlpha は KAG3 3.23 beta 5 から指定可能なモードで、
// ltAlpha よりも処理が若干高速です。
// ltAlpha はそれ以前の KAG と互換性のあるモードです。
// ltAddAlpha を指定した場合は、frameGraphic で指定する
// メッセージ枠用の画像も、ltAddAlpha 用に作成された
// 画像を用いる必要があります (自動的には判別されません)。
// ltAddAlpha 用の画像は画像フォーマットコンバータで作成可能です。
;layerType = ltAddAlpha;

// ◆ メッセージ枠用の画像
// メッセージ枠用の画像のファイル名を指定します。
// "" を指定するとメッセージ枠の画像を使用しません。また、メッセージ枠用の
// 画像を指定した場合、position タグでメッセージレイヤのサイズを変更すると
// おかしな表示になると思います
;frameGraphic = "";  // position タグの frame 属性に相当


// ◆ メッセージレイヤの色と不透明度
// frameColor には 0xRRGGBB 形式で ( RR GG BB はそれぞれ 2 桁の 16 進数)
// メッセージレイヤの色を指定します。frameOpacity には 0 ～ 255 の数値で、
// 不透明度を指定します。メッセージ枠用の画像が指定されている場合は無効で
// す。
;frameColor = 0x000000; // position タグの color 属性に相当
;frameOpacity = 128;  // position タグの opacity 属性に相当


// ◆ 左右上下マージン
// マージン (余白) を pixel 単位で指定します。メッセージ枠用の画像を指定し
// た場合は、メッセージ枠の表示範囲内に設定する必要があります。
// これらは、position タグの marginl, maringt, marginr, marginb 属性に対応
// します。
;marginL = 8; // 左余白
;marginT = 8; // 上余白
;marginR = 8; // 右余白
;marginB = 8; // 下余白


// ◆ 初期位置
// これらは、position タグのそれぞれ left top width height の属性に対応しま
// す。
;ml = 16;  // 左端位置
;mt = 16;  // 上端位置
;mw = 640-32;   // 幅
;mh = 480-32;   // 高さ


// ◆ 自動改行/改ページ
// true を設定すると、行末での自動改行、ページ末での自動改ページが行われま
// す。false を設定するとこれらが行われない他、禁則処理等もされなくなりま
// す。
;defaultAutoReturn = true; 


// ◆ 右文字マージン
// 禁則処理用にあけておく右端の文字数を指定します。
// (縦書きモードでは下端の文字数であると解釈されます)
;marginRCh = 2;


// ◆ 文字の大きさ
// デフォルトの文字の大きさ ( 高さ ) を pixel 単位で指定します。
;defaultFontSize = 24;  // deffont タグの size 属性に相当


// ◆ 行間
// 行間を pixel 単位で指定します。
;defaultLineSpacing = 6; // defstyle タグの linespacing 属性に相当

// ◆ 字間
// 字間を pixel 単位で指定します。
// デフォルトは 0 で、正あるいは負のオフセットで指定します。
// 負の数値を指定すると字間が詰まります。正の数値を指定すると字間が空きま
// す。
;defaultPitch = 0; // defstyle タグの pitch 属性に相当


// ◆ 文字の書体
// デフォルトのフォント名を指定します。
// この設定はシステム変数に記録されて、次回起動時に引き継がれるので、
// userFace の設定を変更し、適用したい場合はシステム変数ファイル
// ?????sc.* の "chdefaultFace" => の行を削除してください。
// (あるいはシステム変数ファイルを消してください)
// カンマで区切って複数のフォントを指定することができます。その場合は、最初
// の方に書いたフォントが存在すれば、優先されます。
;userFace = "ＭＳ Ｐ明朝"; // deffont タグの face 属性に相当


// ◆ 文字の色
// デフォルトの文字の色を 0xRRGGBB 形式で指定します。
;defaultChColor = 0xffffff;  // deffont タグの color 属性に相当


// ◆ 文字をボールドにするか
// する場合は true, しない場合は false を指定します。
;defaultBold = false; // deffont タグの bold 属性に相当


// ◆ ルビサイズ
// ルビサイズを pixel 単位で指定します。
;defaultRubySize = 10; // deffont タグの rubysize に相当


// ◆ ルビ の表示オフセット
// 負の数を指定するとその pixel 数分、本文に近い位置に表示されます。
;defaultRubyOffset = -2; // deffont タグの rubyoffset に相当


// ◆ アンチエイリアス文字描画をするか
// する場合は true, しない場合は false を指定します。
;defaultAntialiased = true;


// ◆ 影の色
// 影の色を 0xRRGGBB 形式で指定します。
;defaultShadowColor = 0x000000;  // deffont タグの shadowcolor に属性に相当

// ◆ 縁取りの色
// 縁取りの色を 0xRRGGBB 形式で指定します。
;defaultEdgeColor = 0x000000;  // deffont タグの edgecolor に属性に相当


// ◆ 影を描画するか
// する場合は true, しない場合は false を指定します。
;defaultShadow = true;  // deffont タグの shadow 属性に相当


// ◆ 縁取りをするか
// する場合は true, しない場合は false を指定します。KAG3 から、縁取りと影
// を同時に描画することができなくなりました。縁取りを指定した場合は縁取りが
// 優先されます。
;defaultEdge = false;  // deffont タグの edge 属性に相当



// ◆ リンクの強調色
// リンクを選択したときに出る半透明矩形のデフォルトの色です。
;defaultLinkColor = 0x0080ff;  // link タグの color 属性に相当


// ◆ リンクの不透明度
// リンクを選択したときに出る半透明矩形の不透明度です。
;defaultLinkOpacity = 64;


// ◆ 縦書きモード
// メッセージレイヤを標準で縦書きモードにする場合は false ではなく true を
// 指定してください。
;vertical = false;


//---------------------------------------------- メッセージ履歴の設定 -----
